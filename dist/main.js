(()=>{"use strict";let t=(()=>{let t=[],e=[];for(let e=1;e<101;e++)t[e]="empty";function i(e){return"empty"!==t[e]&&"miss"!==t[e]&&"hit"!==t[e]}return{addShip:function(i,n,r,...l){i=((t,e,...i)=>{let n=0,r=i;return{hit:function(t){r[r.indexOf(t)]="hit",n+=1},isSunk:function(t){return n===e},name:t,hitLocations:r}})(n,r,...l);let o=n,a=l;for(let e=0;e<a.length;e++){let i=a[e];t[i]=`${o}`}e.push(i)},locationArray:t,isShip:i,receiveAttack:function(n){if(!0===i(n)){let i=t[n];e.find((({name:t})=>t===i)).hit(n),t[n]="hit"}},allShipsArray:e}})();t.addShip("destroyer","destroyer",4,6,7,8,9),t.receiveAttack(6),console.table(t.locationArray),console.table(t.allShipsArray)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,